{"version":3,"sources":["utils/storage.js","api/axiosClient.js","utils/chatHttpServer.js","pages/authentication/login/Login.js","pages/authentication/registration/Registration.js","pages/authentication/Authentication.js","constants/socketEvents.js","utils/chatSocketServer.js","pages/home/chat-list/ChatList.js","pages/home/conversation/Conversation.js","utils/uploadAPI.js","pages/home/Home.js","pages/not-found/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["getUserId","localStorage","getItem","error","console","getUsername","getStorage","key","concat","setStorage","value","setItem","axiosClient","axios","create","baseURL","process","headers","interceptors","request","use","config","userId","username","token","Promise","reject","response","_error$response","status","warn","instance","setLS","getLS","removeLS","removeStorage","removeItem","login","userCredential","post","data","checkUsernameAvailability","Authorization","register","userSessionCheck","getMessages","toUserId","uploadFile","formData","Login","Component","constructor","props","super","handleLogin","async","event","preventDefault","this","loadingState","chatHttpServer","state","setState","loginError","history","push","handleInputChange","target","name","password","render","_jsxs","Form","className","children","_jsx","Alert","variant","Group","controlId","Control","type","placeholder","onChange","Button","onClick","withRouter","Registration","handleRegistration","registrationError","undefined","usernameAvailable","DebounceInput","minLength","debounceTimeout","Authentication","arguments","setRenderLoadingState","Tabs","defaultActiveKey","Tab","eventKey","title","CHAT_LIST_RESPONSE","ADD_MESSAGE_RESPONSE","LOGOUT_RESPONSE","socket","eventEmitter","EventEmitter","establishSocketConnection","io","query","alert","getChatList","emit","on","typing","stopTyping","sendMessage","message","sendMessageRead","receiveMessage","logout","ChatList","createChatListUsers","chatListResponse","chatListUsers","singleUser","length","filter","obj","id","chatList","userDisconnected","loggedOutUser","findIndex","userid","online","loading","selectedUser","user","selectedUserId","updateSelectedUser","componentDidMount","chatSocketServer","componentWillUnmount","removeListener","_Fragment","map","Conversation","receiveSocketMessages","socketResponse","fromUserId","conversations","scrollMessageContainer","messageId","_id","handleTypingIndicator","newSelectedUser","isTyping","typingUser","handleStopTypingIndicator","handleMessageRead","_ref","updated","msg","_objectSpread","read","messageResponse","messages","messageLoading","trim","sendAndUpdateMessages","timestamp","Date","handleTyping","clearTimeout","typingTimeout","setTimeout","handleFileChange","file","files","previewUrl","URL","createObjectURL","selectedFile","handleFileUpload","uploadRes","FormData","append","imageUrl","fileMessage","isFile","messageContainer","React","createRef","off","componentDidUpdate","prevProps","getDerivedStateFromProps","current","scrollTop","scrollHeight","alignMessages","formatTimestamp","toLocaleTimeString","hour","minute","getMessageUI","ref","conversation","index","match","src","alt","href","rel","getInitiateConversationUI","onKeyPress","accept","width","Home","isOverlayVisible","loggedOut","log","getChatBoxComponent","getChatListComponent","role","NotFound","App","Router","Switch","Route","path","exact","component","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.89ab4f81.chunk.js","sourcesContent":["// src/utils/storage.js\r\n\r\n// 🔍 Get user ID from localStorage\r\nexport const getUserId = () => {\r\n  try {\r\n    return localStorage.getItem('userid');\r\n  } catch (error) {\r\n    console.error('Error getting user ID from storage:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\n// 🔍 Get username from localStorage\r\nexport const getUsername = () => {\r\n  try {\r\n    return localStorage.getItem('username');\r\n  } catch (error) {\r\n    console.error('Error getting username from storage:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\n// 🔍 Generic getter for any key (e.g., token)\r\nexport const getStorage = (key) => {\r\n  try {\r\n    return localStorage.getItem(key);\r\n  } catch (error) {\r\n    console.error(`Error getting ${key} from storage:`, error);\r\n    return null;\r\n  }\r\n};\r\n\r\n// 💾 Set any key in localStorage\r\nexport const setStorage = (key, value) => {\r\n  try {\r\n    localStorage.setItem(key, value);\r\n  } catch (error) {\r\n    console.error(`Error setting ${key} in storage:`, error);\r\n  }\r\n};\r\n\r\n// ❌ Remove all session-related keys\r\nexport const removeStorage = () => {\r\n  try {\r\n    localStorage.removeItem('userid');\r\n    localStorage.removeItem('username');\r\n    localStorage.removeItem('token');  // ✅ Remove token on logout\r\n  } catch (error) {\r\n    console.error('Error clearing localStorage:', error);\r\n  }\r\n};\r\n","// src/api/axiosClient.js\r\n\r\nimport axios from 'axios';\r\nimport { getUserId, getUsername } from '../utils/storage';\r\n\r\nconst axiosClient = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL, // ✅ Make sure this is defined in your .env\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// 🔐 Request Interceptor: Attach user metadata and auth token\r\naxiosClient.interceptors.request.use(\r\n  config => {\r\n    const userId = getUserId();\r\n    const username = getUsername();\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (userId) config.headers['X-User-ID'] = userId;\r\n    if (username) config.headers['X-Username'] = username;\r\n    if (token) config.headers['Authorization'] = `Bearer ${token}`;\r\n\r\n    return config;\r\n  },\r\n  error => {\r\n    console.error('[Axios Request Error]', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// 🛡️ Response Interceptor: Global error handling\r\naxiosClient.interceptors.response.use(\r\n  response => response,\r\n  error => {\r\n    const status = error?.response?.status;\r\n\r\n    console.error('[Axios Response Error]', error?.response || error);\r\n\r\n    // Handle auth errors globally\r\n    if (status === 401) {\r\n      console.warn('⚠️ Unauthorized - Consider redirecting to login.');\r\n      // Optional: logout logic or redirect\r\n    }\r\n\r\n    // Handle precondition failure (e.g., username taken)\r\n    if (status === 412) {\r\n      console.warn('🚫 Precondition Failed - Possibly invalid username.');\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosClient;\r\n","// React App\\src\\utils\\chatHttpServer.js\n\nimport axiosClient from '../api/axiosClient';\nimport {\n  getUserId,\n  getUsername,\n  setStorage,\n  getStorage,\n  removeStorage,\n} from './storage';\n\nclass ChatHttpServer {\n  // Local Storage Getters\n  getUserId() {\n    return getUserId();\n  }\n\n  getUsername() {\n    return getUsername();\n  }\n\n  // Local Storage Setters\n  setLS(key, value) {\n    return setStorage(key, value);\n  }\n\n  getLS(key) {\n    return getStorage(key);\n  }\n\n  removeLS() {\n    return removeStorage();\n  }\n\n  // HTTP Calls\n\n  async login(userCredential) {\n    try {\n      const response = await axiosClient.post('/login', userCredential);\n      const { token } = response.data;\n      if (token) {\n        setStorage('token', token);  // ✅ Save token\n      }\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async checkUsernameAvailability(username) {\n    try {\n      const token = getStorage('token');\n      const response = await axiosClient.post('/usernameAvailable', { username }, {\n        headers: {\n          Authorization: token,\n        },\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async register(userCredential) {\n    try {\n      const token = getStorage('token');\n      const response = await axiosClient.post('/register', userCredential, {\n        headers: {\n          Authorization: token,\n        },\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async userSessionCheck(userId) {\n    try {\n      const token = getStorage('token');\n      const response = await axiosClient.post('/userSessionCheck', { userId }, {\n        headers: {\n          Authorization: token,\n        },\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async getMessages(userId, toUserId) {\n    try {\n      const token = getStorage('token');\n      const response = await axiosClient.post('/getMessages', {\n        userId,\n        toUserId,\n      }, {\n        headers: {\n          Authorization: token,\n        },\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // ✅ Upload file (image/pdf)\n  async uploadFile(formData) {\n    try {\n      const response = await axiosClient.post('/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n}\n\nconst instance = new ChatHttpServer();\nexport default instance;\n\n","/**React App\\src\\pages\\authentication\\login\\Login.js */\n\nimport React, { Component } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\n\nimport chatHttpServer from '../../../utils/chatHttpServer';\nimport './Login.css';\n\nclass Login extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      loginError: false\n    };\n  }\n\n  handleLogin = async (event) => {\n    event.preventDefault();\n    this.props.loadingState(true);\n    try {\n      const response = await chatHttpServer.login(this.state);\n      this.props.loadingState(false);\n      if (response.error) {\n        this.setState({ loginError: true });\n      } else {\n        chatHttpServer.setLS('userid', response.userId);\n        this.props.history.push(`/home`);\n      }\n    } catch (error) {\n      this.props.loadingState(false);\n      this.setState({ loginError: true });\n    }\n  }\n\n  handleInputChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n      loginError: false // reset error on input change\n    });\n  }\n\n  render() {\n    return (\n      <Form className=\"auth-form\">\n        {this.state.loginError && (\n          <Alert variant=\"danger\">Invalid login details</Alert>\n        )}\n        <Form.Group controlId=\"loginUsername\">\n          <Form.Control \n            type=\"text\"\n            name=\"username\"\n            placeholder=\"Enter username\"\n            onChange={this.handleInputChange}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"loginPassword\">\n          <Form.Control \n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            onChange={this.handleInputChange}\n          />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\" onClick={this.handleLogin}>\n          Login\n        </Button>\n      </Form>\n    );\n  }\n}\n\nexport default withRouter(Login);\n","/**React App\\src\\pages\\authentication\\registration\\Registration.js */\nimport React, { Component } from 'react';\nimport { Alert, Form, Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport { DebounceInput } from 'react-debounce-input';\n\nimport chatHttpServer from '../../../utils/chatHttpServer';\nimport './Registration.css';\n\nclass Registration extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      usernameAvailable: true,\n      registrationError: false\n    };\n  }\n\n  handleRegistration = async (event) => {\n    event.preventDefault();\n    this.props.loadingState(true);\n    try {\n      const response = await chatHttpServer.register(this.state);\n      this.props.loadingState(false);\n      if (response.error) {\n        this.setState({ registrationError: true });\n      } else {\n        chatHttpServer.setLS('userid', response.userId);\n        this.props.history.push(`/home`);\n      }\n    } catch (error) {\n      this.props.loadingState(false);\n      this.setState({ registrationError: true });\n    }\n  }\n\n  checkUsernameAvailability = async (event)  => {\n    if(event.target.value !== '' && event.target.value !== undefined) {\n      this.setState({\n        username: event.target.value\n      });\n      this.props.loadingState(true);\n      try {\n        const response = await chatHttpServer.checkUsernameAvailability(this.state.username);\n        this.props.loadingState(false);\n        if(response.error) {\n          this.setState({\n            usernameAvailable: false\n          });\n        } else {\n          this.setState({\n            usernameAvailable: true\n          });\n        }\n      } catch (error) {\n        this.props.loadingState(false);\n        this.setState({\n          usernameAvailable: false\n        });\n      }\n    } else if (event.target.value === '') {\n      this.setState({\n        usernameAvailable: true\n      });\n    }  \n  }\n\n  handleInputChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  render() {\n    return (\n      <Form className=\"auth-form\">\n        <Form.Group controlId=\"formUsername\">\n          <DebounceInput\n            className=\"form-control\"\n            placeholder = \"Enter username\"\n            minLength={2}\n            debounceTimeout={300}\n            onChange={this.checkUsernameAvailability} />\n          <Alert className={`username-availability-warning ${this.state.usernameAvailable ? 'visibility-hidden' : ''}`} variant=\"danger\">\n            <strong>{this.state.username}</strong> is already taken, try another username.\n          </Alert>\n        </Form.Group>\n\n        <Form.Group controlId=\"formPassword\">\n          <Form.Control \n            type = \"password\"\n            name = \"password\"\n            placeholder = \"Password\"\n            onChange = {\n              this.handleInputChange\n            }\n          />\n        </Form.Group>\n\n        {this.state.registrationError && (\n          <Alert variant=\"danger\">\n            Unable to register. Please try again later.\n          </Alert>\n        )}\n\n        <Button variant=\"primary\" type=\"submit\" onClick={this.handleRegistration}>\n          Registration\n        </Button>\n      </Form>\n    );\n  }\n}\n\nexport default withRouter(Registration);\n","/**React App\\src\\pages\\authentication\\Authentication.js */\n\nimport React, { Component } from 'react';\nimport {Tabs, Tab} from 'react-bootstrap'\n\nimport Login from './login/Login';\nimport Registration from './registration/Registration';\n\nimport './Authentication.css';\n\nclass Authentication extends Component {\n  state = {\n    loadingState: false\n  }\n\n  setRenderLoadingState = (loadingState) => {\n    this.setState({\n      loadingState: loadingState\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className = {`overlay auth-loading ${this.state.loadingState ? '' : 'visibility-hidden'}`}>\n          <h1>Loading</h1>\n        </div>\n        <div className=\"authentication-screen\">\n          <Tabs variant=\"pills\" defaultActiveKey = \"login\" >\n            <Tab eventKey=\"login\" title=\"Login\">\n              <Login loadingState={this.setRenderLoadingState}/>\n            </Tab>\n            <Tab eventKey=\"registration\" title=\"Registration\">\n              <Registration loadingState={this.setRenderLoadingState}/>\n            </Tab>\n          </Tabs>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Authentication;\n","// src/constants/socketEvents.js\r\n\r\nexport const CHAT_LIST = 'chat-list';\r\nexport const CHAT_LIST_RESPONSE = 'chat-list-response';\r\nexport const ADD_MESSAGE = 'add-message';\r\nexport const ADD_MESSAGE_RESPONSE = 'add-message-response';\r\nexport const LOGOUT = 'logout';\r\nexport const LOGOUT_RESPONSE = 'logout-response';\r\n","/**React App\\src\\utils\\chatSocketServer.js */\n\n// React App\\src\\utils\\chatSocketServer.js\n\nimport { io } from 'socket.io-client';\nimport { EventEmitter } from 'events';\nimport {\n  CHAT_LIST,\n  CHAT_LIST_RESPONSE,\n  ADD_MESSAGE,\n  ADD_MESSAGE_RESPONSE,\n  LOGOUT,\n  LOGOUT_RESPONSE\n} from '../constants/socketEvents';\n\nconst SOCKET_URL = process.env.REACT_APP_SOCKET_URL;\n\nclass ChatSocketServer {\n  socket = null;\n  eventEmitter = new EventEmitter();\n\n  // Connecting to Socket Server\n  establishSocketConnection(userId) {\n    try {\n      this.socket = io(SOCKET_URL, {\n        query: `userId=${userId}`\n      });\n    } catch (error) {\n      alert(`Something went wrong; Can't connect to socket server`);\n    }\n  }\n\n  getChatList(userId) {\n    this.socket.emit(CHAT_LIST, { userId });\n    this.socket.on(CHAT_LIST_RESPONSE, (data) => {\n      this.eventEmitter.emit(CHAT_LIST_RESPONSE, data);\n    });\n  }\n\n  typing(data) {\n    this.socket.emit('typing', data);\n  }\n\n  stopTyping(data) {\n      this.socket.emit('stopTyping', data);\n  }\n\n  sendMessage(message) {\n    this.socket.emit(ADD_MESSAGE, message);\n  }\n\n  sendMessageRead(data) {\n    this.socket.emit('message-read', data);\n  }\n\n  receiveMessage() {\n    this.socket.on(ADD_MESSAGE_RESPONSE, (data) => {\n      this.eventEmitter.emit(ADD_MESSAGE_RESPONSE, data);\n    });\n  }\n\n  logout(userId) {\n    this.socket.emit(LOGOUT, userId);\n    this.socket.on(LOGOUT_RESPONSE, (data) => {\n      this.eventEmitter.emit(LOGOUT_RESPONSE, data);\n    });\n  }\n}\n\nconst instance = new ChatSocketServer();\nexport default instance;\n","\n/*React App\\src\\pages\\home\\chat-list\\ChatList.js*/\nimport React, { Component } from 'react';\n\nimport chatSocketServer from '../../../utils/chatSocketServer';\nimport \"./ChatList.css\";\n\nclass ChatList extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      selectedUserId: null,\n      chatListUsers: []\n    }\n  }\n\n  componentDidMount() {\n    const userId = this.props.userId;\n    chatSocketServer.getChatList(userId);\n    chatSocketServer.eventEmitter.on('chat-list-response', this.createChatListUsers);\n  }\n\n  componentWillUnmount() {\n    chatSocketServer.eventEmitter.removeListener('chat-list-response', this.createChatListUsers);\n  }\n\n  createChatListUsers = (chatListResponse) => {    \n    if (!chatListResponse.error) {\n      let chatListUsers = this.state.chatListUsers;\n      if (chatListResponse.singleUser) {\n        if (chatListUsers.length > 0) {\n          chatListUsers = chatListUsers.filter(obj => obj.id !== chatListResponse.chatList[0].id);\n        }\n        chatListUsers = [...chatListUsers, ...chatListResponse.chatList];\n      } else if (chatListResponse.userDisconnected) {\n        const loggedOutUser = chatListUsers.findIndex(obj => obj.id === chatListResponse.userid);\n        if (loggedOutUser >= 0) {\n          chatListUsers[loggedOutUser].online = 'N';\n        }\n      } else {\n        chatListUsers = chatListResponse.chatList;\n      }\n\n      this.setState({ chatListUsers });\n    } else {\n      console.error('Unable to load Chat list, Redirecting to Login.');\n    }\n\n    this.setState({ loading: false });\n  }\n\n  selectedUser = (user) => {\n    this.setState({\n      selectedUserId: user.id\n    });\n    this.props.updateSelectedUser(user)\n  }\n\n  render() {\n    return (\n      <>\n        <ul className={`user-list ${this.state.chatListUsers.length === 0 ? 'visibility-hidden' : ''}`} >\n          {\n            this.state.chatListUsers.map(user => \n              <li \n                key={user.id} \n                className={this.state.selectedUserId === user.id ? 'active' : ''}\n                onClick={() => this.selectedUser(user)}\n              >\n                {user.username}\n                <span className={user.online === 'Y' ? 'online' : 'offline'}></span>\n              </li>\n            )\n          }\n        </ul>\n        <div className={`alert \n          ${this.state.loading ? 'alert-info' : ''} \n          ${this.state.chatListUsers.length > 0 ? 'visibility-hidden' : ''}`}>\n          { this.state.loading || this.state.chatListUsers.length === 0 ? 'Loading your chat list.' : 'No User Available to chat.' }\n        </div>\n      </>\n    );\n  }\n}\n\nexport default ChatList;\n","/* React App\\src\\pages\\home\\conversation\\Conversation.js */\nimport React, { Component } from 'react';\nimport chatHttpServer from '../../../utils/chatHttpServer';\nimport chatSocketServer from '../../../utils/chatSocketServer';\nimport { uploadFile } from '../../../utils/uploadAPI';\n\nimport './Conversation.css';\n\nclass Conversation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messageLoading: true,\n      conversations: [],\n      selectedUser: null,\n      isTyping: false,\n      typingUser: '',\n      previewUrl: null,\n      selectedFile: null\n    };\n    this.messageContainer = React.createRef();\n    this.typingTimeout = null;\n  }\n\n  componentDidMount() {\n    chatSocketServer.receiveMessage();\n    chatSocketServer.socket.on('typing', this.handleTypingIndicator);\n    chatSocketServer.socket.on('stopTyping', this.handleStopTypingIndicator);\n    chatSocketServer.socket.on('message-read', this.handleMessageRead);\n    chatSocketServer.eventEmitter.on('add-message-response', this.receiveSocketMessages);\n  }\n\n  componentWillUnmount() {\n    chatSocketServer.eventEmitter.removeListener('add-message-response', this.receiveSocketMessages);\n    chatSocketServer.socket.off('typing', this.handleTypingIndicator);\n    chatSocketServer.socket.off('stopTyping', this.handleStopTypingIndicator);\n    chatSocketServer.socket.off('message-read', this.handleMessageRead);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.newSelectedUser === null ||\n      this.props.newSelectedUser.id !== prevProps.newSelectedUser.id\n    ) {\n      this.getMessages();\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (state.selectedUser === null || state.selectedUser.id !== props.newSelectedUser.id) {\n      return {\n        selectedUser: props.newSelectedUser\n      };\n    }\n    return null;\n  }\n\n  receiveSocketMessages = (socketResponse) => {\n    const { selectedUser } = this.state;\n    if (selectedUser && selectedUser.id === socketResponse.fromUserId) {\n      this.setState({\n        conversations: [...this.state.conversations, socketResponse]\n      });\n      this.scrollMessageContainer();\n\n      chatSocketServer.sendMessageRead({\n        fromUserId: this.props.userId,\n        toUserId: selectedUser.id,\n        messageId: socketResponse._id\n      });\n    }\n  };\n\n  handleTypingIndicator = (data) => {\n    const { newSelectedUser } = this.props;\n    if (newSelectedUser && data.fromUserId === newSelectedUser.id) {\n      this.setState({ isTyping: true, typingUser: data.username });\n    }\n  };\n\n  handleStopTypingIndicator = (data) => {\n    const { newSelectedUser } = this.props;\n    if (newSelectedUser && data.fromUserId === newSelectedUser.id) {\n      this.setState({ isTyping: false, typingUser: '' });\n    }\n  };\n\n  handleMessageRead = ({ messageId }) => {\n    const updated = this.state.conversations.map((msg) =>\n      msg._id === messageId ? { ...msg, read: true } : msg\n    );\n    this.setState({ conversations: updated });\n  };\n\n  getMessages = async () => {\n    try {\n      const { userId, newSelectedUser } = this.props;\n      const messageResponse = await chatHttpServer.getMessages(userId, newSelectedUser.id);\n      if (!messageResponse.error) {\n        this.setState({ conversations: messageResponse.messages });\n        this.scrollMessageContainer();\n      } else {\n        console.error('Unable to fetch messages');\n      }\n      this.setState({ messageLoading: false });\n    } catch (error) {\n      console.error('Message fetch error:', error);\n      this.setState({ messageLoading: false });\n    }\n  };\n\n  sendMessage = (event) => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      const message = event.target.value.trim();\n      const { userId, newSelectedUser } = this.props;\n\n      if (!message || !userId || !newSelectedUser) {\n        return;\n      }\n\n      this.sendAndUpdateMessages({\n        fromUserId: userId,\n        message: message,\n        toUserId: newSelectedUser.id,\n        timestamp: new Date()\n      });\n\n      event.target.value = '';\n      chatSocketServer.stopTyping({ fromUserId: userId, toUserId: newSelectedUser.id });\n    }\n  };\n\n  handleTyping = (event) => {\n    const { userId, newSelectedUser } = this.props;\n    if (!newSelectedUser) return;\n\n    chatSocketServer.typing({\n      fromUserId: userId,\n      toUserId: newSelectedUser.id,\n      username: this.props.username || 'User'\n    });\n\n    clearTimeout(this.typingTimeout);\n    this.typingTimeout = setTimeout(() => {\n      chatSocketServer.stopTyping({ fromUserId: userId, toUserId: newSelectedUser.id });\n    }, 1000);\n  };\n\n  handleFileChange = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const previewUrl = URL.createObjectURL(file);\n      this.setState({ previewUrl, selectedFile: file });\n    }\n  };\n\n  handleFileUpload = async () => {\n    const { userId, newSelectedUser } = this.props;\n    const { selectedFile } = this.state;\n\n    if (!selectedFile || !userId || !newSelectedUser) return;\n\n    try {\n      const uploadRes = await uploadFile(selectedFile);\n\n      if (uploadRes && uploadRes.imageUrl) {\n        const fileMessage = {\n          fromUserId: userId,\n          toUserId: newSelectedUser.id,\n          message: uploadRes.imageUrl,\n          isFile: true,\n          timestamp: new Date()\n        };\n        this.sendAndUpdateMessages(fileMessage);\n        this.setState({ previewUrl: null, selectedFile: null });\n      }\n    } catch (error) {\n      console.error('Upload failed:', error);\n    }\n  };\n\n  sendAndUpdateMessages(message) {\n    try {\n      chatSocketServer.sendMessage(message);\n      this.setState({\n        conversations: [...this.state.conversations, { ...message, read: false }]\n      });\n      this.scrollMessageContainer();\n    } catch (error) {\n      console.error(`Can't send your message`, error);\n    }\n  }\n\n  scrollMessageContainer() {\n    if (this.messageContainer.current !== null) {\n      try {\n        setTimeout(() => {\n          this.messageContainer.current.scrollTop = this.messageContainer.current.scrollHeight;\n        }, 100);\n      } catch (error) {\n        console.warn(error);\n      }\n    }\n  }\n\n  alignMessages(toUserId) {\n    return this.props.userId !== toUserId;\n  }\n\n  formatTimestamp(timestamp) {\n    if (!timestamp) return '';\n    const date = new Date(timestamp);\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  }\n\n  getMessageUI() {\n    return (\n      <ul ref={this.messageContainer} className=\"message-thread\">\n        {this.state.conversations.map((conversation, index) => (\n          <li\n            className={`${this.alignMessages(conversation.toUserId) ? 'align-right' : ''}`}\n            key={index}\n          >\n            <div>\n              {conversation.isFile ? (\n                conversation.message.match(/\\.(jpg|jpeg|png|gif)$/i) ? (\n                  <img src={conversation.message} alt=\"sent\" className=\"chat-image\" />\n                ) : (\n                  <a href={conversation.message} target=\"_blank\" rel=\"noopener noreferrer\">Download File</a>\n                )\n              ) : (\n                conversation.message\n              )}\n            </div>\n            <div className=\"message-meta\">\n              <span className=\"timestamp\">{this.formatTimestamp(conversation.timestamp)}</span>\n              {this.alignMessages(conversation.toUserId) && (\n                <span className=\"read-status\">{conversation.read ? '✔' : '🕓'}</span>\n              )}\n            </div>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  getInitiateConversationUI() {\n    if (this.props.newSelectedUser !== null) {\n      return (\n        <div className=\"message-thread start-chatting-banner\">\n          <p className=\"heading\">\n            You haven't chatted with {this.props.newSelectedUser.username} in a while,\n            <span className=\"sub-heading\"> Say Hi.</span>\n          </p>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    const { messageLoading, selectedUser, isTyping, typingUser, previewUrl } = this.state;\n    return (\n      <>\n        <div className={`message-overlay ${!messageLoading ? 'visibility-hidden' : ''}`}>\n          <h3>\n            {selectedUser && selectedUser.username ? 'Loading Messages' : ' Select a User to chat.'}\n          </h3>\n        </div>\n        <div className={`message-wrapper ${messageLoading ? 'visibility-hidden' : ''}`}>\n          <div className=\"message-container\">\n            <div className=\"opposite-user\">\n              Chatting with{' '}\n              {this.props.newSelectedUser ? this.props.newSelectedUser.username : '----'}\n            </div>\n            {this.state.conversations.length > 0\n              ? this.getMessageUI()\n              : this.getInitiateConversationUI()}\n            {isTyping && <div className=\"typing-indicator\">{typingUser} is typing...</div>}\n          </div>\n\n          <div className=\"message-typer\">\n            <form>\n              <textarea\n                className=\"message form-control\"\n                placeholder=\"Type and hit Enter\"\n                onKeyPress={this.sendMessage}\n                onChange={this.handleTyping}\n              ></textarea>\n              <div className=\"file-upload\">\n                <input\n                  type=\"file\"\n                  onChange={this.handleFileChange}\n                  accept=\"image/*,application/pdf\"\n                />\n              </div>\n              {previewUrl && (\n                <div className=\"image-preview\">\n                  <img src={previewUrl} alt=\"preview\" width=\"100\" />\n                  <button type=\"button\" onClick={this.handleFileUpload}>Send Image</button>\n                </div>\n              )}\n            </form>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Conversation;\n","// React App\\src\\utils\\uploadAPI.js\r\n\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = process.env.REACT_APP_API_URL;\r\n\r\nexport const uploadFile = async (file) => {\r\n  const formData = new FormData();\r\n  formData.append('image', file); // ✅ Must match the field name used in multer middleware\r\n\r\n  try {\r\n    const response = await axios.post(`${BASE_URL}/upload`, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Upload failed:', error);\r\n    throw error;\r\n  }\r\n};\r\n","/**React App\\src\\pages\\home\\Home.js */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { Component } from 'react';\nimport { withRouter } from \"react-router-dom\";\n\nimport chatSocketServer from '../../utils/chatSocketServer';\nimport chatHttpServer from '../../utils/chatHttpServer';\n\nimport ChatList from './chat-list/ChatList';\nimport Conversation from './conversation/Conversation';\n\nimport './Home.css';\n\nclass Home extends Component {\n  userId = null;\n  state = {\n    isOverlayVisible: true,\n    username: '______',\n    selectedUser: null\n  }\n\n  logout = async () => {\n    try {\n      await chatHttpServer.removeLS();\n      chatSocketServer.logout({\n        userId: this.userId\n      });\n      chatSocketServer.eventEmitter.on('logout-response', (loggedOut) => {\n        this.props.history.push(`/`);\n      });\n    } catch (error) {\n      console.log(error);\n      alert(' This App is Broken, we are working on it. try after some time.');\n      throw error;\n    }\n  }\n\n  setRenderLoadingState = (loadingState) => {\n    this.setState({\n      isOverlayVisible: loadingState\n    });\n  }\n\n  async componentDidMount() {\n    try {\n      this.setRenderLoadingState(true);\n      this.userId = await chatHttpServer.getUserId();\n      const response = await chatHttpServer.userSessionCheck(this.userId);\n      if (response.error) {\n        this.props.history.push(`/`)\n      } else {\n        this.setState({\n          username: response.username\n        });\n        chatHttpServer.setLS('username', response.username);\n        chatSocketServer.establishSocketConnection(this.userId);\n      }\n      this.setRenderLoadingState(false);\n    } catch (error) {\n      this.setRenderLoadingState(false);\n      this.props.history.push(`/`)\n    }\n  }\n\n  updateSelectedUser = (user) => {\n    this.setState({\n      selectedUser: user\n    });\n  }\n\n  getChatListComponent() {\n    return this.state.isOverlayVisible ? null : <ChatList userId={this.userId} updateSelectedUser={this.updateSelectedUser}/>\n  }\n\n  getChatBoxComponent = () => {\n    return this.state.isOverlayVisible ? null : <Conversation userId={this.userId} newSelectedUser={this.state.selectedUser}/>\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className = {`${this.state.isOverlayVisible ? 'overlay': 'visibility-hidden' } `}>\n          <h1>Loading</h1>\n        </div>\n        <header className=\"app-header\">\n          <nav className=\"navbar navbar-expand-md\">\n            <h4>Hello {this.state.username} </h4>\n          </nav>\n          <ul className=\"nav justify-content-end\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"#\" onClick={this.logout}>Logout</a>\n            </li>\n          </ul>\n        </header>\n\n        <main role=\"main\" className=\"container content\" >\n          <div className=\"row chat-content\">\n            <div className=\"col-3 chat-list-container\">\n              {this.getChatListComponent()}\n            </div>\n            <div className=\"col-8 message-container\">\n              {this.getChatBoxComponent()}\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Home)\n","/**React App\\src\\pages\\not-found\\NotFound.js */\nimport React, { Component } from 'react';\nimport './NotFound.css';\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        NotFound Component\n      </div>\n    );\n  }\n}\n\nexport default NotFound;\n","/*\n * Real time private chatting app using React, Nodejs, mongodb and Socket.io\n * @author Shashank Tiwari\n */\n/*React App\\src\\App.js*/\nimport React, { Component } from 'react';\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from \"react-router-dom\";\n\nimport Authentication from './pages/authentication/Authentication';\nimport Home from './pages/home/Home';\nimport NotFound from './pages/not-found/NotFound';\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={Authentication} />\n          <Route path=\"/home/\" component={Home} />\n          <Route component={NotFound} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n//React App\\src\\serviceWorker.js\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/*React App\\src\\index.js*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}